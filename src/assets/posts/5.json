{"author":"PHSix","id":5,"title":"Flutter基础","created_at":"2021-04-23T09:44:24Z","body":["flutter 是一套google开发的、使用dart进行开发的针对web开发的程序应用框架，它同时支持了android, ios, web, windows, macos, linux等平台的应用开发，可以真正大做到一次开发跑到所有平台，同时在性能上，在最主要的开发平台-> android 上有着堪比原生的性能(这一点超越了hybird开发模式和react native)。\r\n\r\nflutter 框架采用了material design的设计风格。\r\n\r\nmaterial design 是一套google推出的设计风格（语言）\r\n\r\nflutter可运行的最基础代码\r\n\r\n```dart\r\nimport 'package:flutter/material.dart';\r\n\r\nvoid main() {\r\n  runApp(MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      title: 'Flutter Demo',\r\n      home: NewHomePage(),\r\n    );\r\n  }\r\n}\r\n\r\nclass NewHomePage extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n        appBar: AppBar(title: Text(\"title\")),\r\n        body: Center(\r\n          child: Text(\"center\"),\r\n        ));\r\n  }\r\n}\r\n```\r\n### 代码结构\r\n在构建flutter 应用时，程序的入口是main函数，在main函数中只执行一个runApp()方法，输入参数为一个继承自`StatelessWidget`类的一个子类。\r\n\r\n在最新版本的dart语法中，实例化类可以直接使用`类名()`的方式创建对象，可以直接省略使用`new`。\r\n\r\n每一个继承自StatelessWidget类的子类都需要实现一个方法==> `Widget build(BuildContext context){}`，这是flutter所有继承自State类的子类都必须实现的一个方法。(flutter中所有显示的Widget几乎都继承自State类)\r\n\r\n`MaterialApp` => 是一个继承自`StatefullWidget`的子类，这个类的效果是创建一个符合Material Design的应用，也是程序中必须使用到的代码。\r\n\r\n`Scaffold` => “脚手架” 这是一个flutter官方提供的脚手架，我们通常在开发中都会使用它来进行快速开发。\r\n"]}